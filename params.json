{"google":"UA-9161015-2","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Kindergarten","tagline":"A kindergarten for ruby objects to provide Modularity and Security.","body":"# Kindergarten\r\n\r\n[![Build Status](https://secure.travis-ci.org/coffeeaddict/kindergarten.png)](http://travis-ci.org/coffeeaddict/kindergarten)\r\n\r\n[![Code Climate](https://codeclimate.com/badge.png)](https://codeclimate.com/github/coffeeaddict/kindergarten)\r\n\r\nA way to achieve modularity and modular security with a sandbox on steroids.\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'kindergarten'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install kindergarten\r\n\r\n## Usage\r\n\r\n```ruby\r\n# define a child\r\nchild = User.find(2)\r\n\r\n# define a module (perimeter) for the child to play in\r\nclass MyPlayModule < Kindergarten::Perimeter\r\n  # use can-can rules to govern the perimeter\r\n  govern do |child|\r\n    can :watch, Television\r\n    cannot :watch, CableTV\r\n\r\n    can :eat, Candy do |candy|\r\n      child.quotum.allows(candy)\r\n    end\r\n  end\r\n\r\n  # define methods for the sandbox\r\n  sandbox :watch_tv, :eat\r\n\r\n  def watch_tv(tv)\r\n    guard(:watch, tv)\r\n    child.watch(tv)\r\n\r\n    sleep(:four)\r\n  end\r\n\r\n  def eat(candy)\r\n    guard(:eat, candy)\r\n    child.eat(candy)\r\n  end\r\n\r\n  def sleep(len) # not_accessible_from_outside\r\n    child.sleep(len)\r\n  end\r\nend\r\n\r\n# load the child and the module into a sandbox\r\nsandbox = Kindergarten.sandbox(child)\r\nsandbox.load_module(MyPlayPerimeter)\r\n\r\n# you can now call the sandboxed methods on the sandbox\r\nsandbox.watch_tv(CableTV.new)  # fails with Kindergarten::AccessDenied\r\n30.times do\r\n  sandbox.eat(Liquorice.new)   # fails after a while\r\nend\r\n\r\nsandbox.sleep(:long)           # fails with NoMethodError\r\n\r\nsandbox.allowed?(:watch, Television)\r\n# => true\r\n```\r\n\r\nYou are not restricted to only one perimeter/module - that would be most\r\nboring...\r\n\r\nInfact, the above is the essence of things - but there is much much more fun\r\nhidden inside the Kindergarten. More will follow on the Wiki\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Added some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n"}